{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux virtual machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes linux node pool profile count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes linux agent nodes"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes master pool profile count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes master nodes"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of Azure Stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.14",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    },
    "aksEngineBaseURL": {
      "type": "string",
      "defaultValue": "https://github.com/Azure/aks-engine/releases/download",
      "metadata": {
        "description": "The beginning of the URL for downloading the AKS Engine binary"
      }
    },
    "aksEngineReleaseVersion": {
      "type": "string",
      "defaultValue": "v0.43.0",
      "metadata": {
        "description": "The version of AKS Engine to download"
      }
    },
    "galleryRepository": {
      "type": "string",
      "defaultValue": "msazurestackworkloads/azurestack-gallery",
      "metadata": {
        "description": "Marketplace item repository"
      }
    },
    "galleryBranch": {
      "type": "string",
      "defaultValue": "master",
      "metadata": {
        "description": "Marketplace item branch"
      }
    },
    "clusterDefinitionFileName": {
      "type": "string",
      "defaultValue": "clusterDefinition.json",
      "metadata": {
        "description": "The name of the file containing the cluster definition"
      }
    },
    "kubernetesImageBase": {
      "type": "string",
      "defaultValue": "mcr.microsoft.com/k8s/azurestack/core/",
      "metadata": {
        "description": "The base for Kubernetes images"
      }
    },
    "customVnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the custom vnet"
      }
    },
    "masterSubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the master subnet"
      }
    },
    "agentSubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the agent subnet"
      }
    },
    "firstConsecutiveStaticIP": {
      "type": "string",
      "defaultValue": "10.100.0.5",
      "metadata": {
        "description": "First Consective Static IP"
      }
    },
    "networkPlugin": {
      "defaultValue": "kubenet",
      "allowedValues": [
        "flannel",
        "azure",
        "kubenet"
      ],
      "metadata": {
        "description": "Network plugin which will deployed in Kubernetes cluster"
      },
      "type": "string"
    },
    "networkPolicy": {
      "defaultValue": "",
      "allowedValues": [
        "",
        "azure"
      ],
      "metadata": {
        "description": "Network policy which will deployed in Kubernetes cluster"
      },
      "type": "string"
    },
    "availabilityProfile": {
      "defaultValue": "AvailabilitySet",
      "allowedValues": [
        "AvailabilitySet",
        "VirtualMachineScaleSets"
      ],
      "metadata": {
        "description": "Availability profile that nodes in the Kubernetes cluster will be deployed with"
      },
      "type": "string"
    },
    "windowsAgentPoolProfileCount": {
      "defaultValue": "0",      
      "metadata": {
        "description": "Kubernetes Windows node pool profile count"
      },
      "type": "string"
    },
    "windowsAgentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The virtual machine size of the Kubernetes Windows agent nodes"
      },
      "type": "string"
    },
    "windowsAdminUsername": {
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Windows virtual machines that are part of the Kubernetes cluster."
      },
      "type": "string"
    },
    "windowsAdminPassword": {
      "defaultValue": "",
      "metadata": {
        "description": "Password for the Windows virtual machines that are part of the Kubernetes cluster."
      },
      "type": "securestring"
    },
    "customWindowsPackageURL": {
      "defaultValue": "",
      "metadata": {
        "description": "Custom Windows K8s zip location which will be used to deploy(kubelet, kubeproxy) on Windows node."
      },
      "type": "string"
    },
    "nodeDistro": {
      "defaultValue": "ubuntu",
      "allowedValues": [
        "ubuntu",
        "aks-ubuntu-16.04"
      ],
      "metadata": {
        "description": "Node distro to be used to deploy Kubernetes on Azure Stack."
      },
      "type": "string"
    },
    "enableTillerAddOn": {
      "type": "string",
      "defaultValue": "false",
      "metadata": {
        "description": "Flag to enable Tiller addon"
      }
    },
    "containerRuntime": {
      "type": "string",
      "defaultValue": "docker",
      "allowedValues": [
        "docker",
        "containerd"
      ],
      "metadata": {
        "description": "Container runtime to deploy on each cluster node."
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' ENABLE_TILLER=','\"',parameters('enableTillerAddOn'),'\"' ,' CONTAINER_RUNTIME=','\"',parameters('containerRuntime'),'\"' ,' WINDOWS_CUSTOM_PACKAGE=','\"',parameters('customWindowsPackageURL'),'\"' ,' WINDOWS_AGENT_COUNT=','\"',parameters('windowsAgentPoolProfileCount'),'\"' ,' WINDOWS_AGENT_SIZE=','\"',parameters('windowsAgentPoolProfileVMSize'),'\"',' WINDOWS_ADMIN_USERNAME=','\"',parameters('windowsAdminUsername'),'\"',' WINDOWS_ADMIN_PASSWORD=','\"',parameters('windowsAdminPassword'),'\"',' NETWORK_PLUGIN=','\"',parameters('networkPlugin'),'\"',' NETWORK_POLICY=','\"',parameters('networkPolicy'),'\"',' AVAILABILITY_PROFILE=','\"',parameters('availabilityProfile'),'\"',' FIRST_CONSECUTIVE_STATIC_IP=','\"',parameters('firstConsecutiveStaticIP'),'\"',' AGENT_SUBNET_NAME=','\"',parameters('agentSubnetName'),'\"',' MASTER_SUBNET_NAME=','\"',parameters('masterSubnetName'),'\"',' CUSTOM_VNET_NAME=','\"',parameters('customVnetName'),'\"',' NODE_DISTRO=','\"',parameters('nodeDistro'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"',' AKSE_BASE_URL=','\"',parameters('aksEngineBaseURL'), '\"', ' AKSE_RELEASE_VERSION=','\"',parameters('aksEngineReleaseVersion'),'\"',' GALLERY_REPO=','\"',parameters('galleryRepository'),'\"',' GALLERY_BRANCH=','\"',parameters('galleryBranch'),'\"',' DEFINITION_TEMPLATE_NAME=','\"',parameters('clusterDefinitionFileName'),'\"',' K8S_IMAGE_BASE=','\"',parameters('kubernetesImageBase'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
